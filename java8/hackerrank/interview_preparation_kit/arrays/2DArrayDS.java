/**
 *
 * https://www.hackerrank.com/challenges/2d-array/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=arrays
 */
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the hourglassSum function below.
    static int hourglassSum(int[][] arr) {
        int n = arr.length;
        int[][] ps = new int[n][n];

        // initial value
        for (int i = 0; i < n; i++) {
            ps[i][0] = arr[i][0];
        }

        // row wise prefix sum
        for (int i = 0; i < n; i++) {
            for (int j = 1; j < n; j++) {
                ps[i][j] = ps[i][j-1] + arr[i][j];
            }
        }

        int maxSum = -Integer.MAX_VALUE;
        for (int i = 2; i < n; i++) {
            for (int j = 2; j < n; j++) {
                // top and bottom sum
                int ts = ps[i][j] + ps[i-2][j];

                // Correcting as its prefix sum
                if (j-3 >= 0) {
                    ts -= ps[i][j-3] + ps[i-2][j-3];
                }

                // add middle element
                ts += arr[i-1][j-1];
                maxSum = Math.max(maxSum, ts);
            }
        }

        return maxSum;
    }

    /**
     *
     * Stub code for I/O operations generated by hackerrank editor
     */

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int[][] arr = new int[6][6];

        for (int i = 0; i < 6; i++) {
            String[] arrRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 6; j++) {
                int arrItem = Integer.parseInt(arrRowItems[j]);
                arr[i][j] = arrItem;
            }
        }

        int result = hourglassSum(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
